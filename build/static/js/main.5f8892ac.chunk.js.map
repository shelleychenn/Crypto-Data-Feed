{"version":3,"sources":["config/cryptoCompare.js","components/Entry.js","components/PriceData.js","components/LineGraph.js","components/Dashboard.js","components/SymbolForm.js","App.js","index.js"],"names":["module","exports","Entry","entry","className","date","open","high","low","close","volumn","marketCap","PriceData","data","map","key","Chart","defaults","global","defaultFontFamily","elements","line","tension","LineGraph","props","chartRef","React","createRef","updateChart","newChart","destroy","myChartRef","type","labels","state","datasets","label","fill","borderColor","options","layout","padding","top","left","right","bottom","scales","xAxes","gridLines","display","drawBorder","yAxes","update","this","current","getContext","classes","graphContainer","id","ref","priceData","volume","Component","Dashboard","getAllPrices","getAllInfo","bind","result","push","length","symbol","time","SymbolForm","timeInterval","getCached","handleSymbolChange","handletimeIntervalChange","handleSubmit","changeGetCachedState","e","setState","target","value","preventDefault","getHistoricalDataForSearched","onSubmit","name","placeholder","onChange","defaultValue","checked","onClick","App","error","getBTCData","transformData","axios","get","API_KEY","then","response","catch","err","console","log","symbolAndTime","params","timeInt","rest","slice","toLowerCase","string","resultData","status","dataObj","transformed","innerObj","topPortion","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f8892ac.chunk.js","sourcesContent":["const API_KEY = 'LOALZ1W81YDHFAK8';\n\nmodule.exports = API_KEY;\n","import React from 'react';\n\nvar Entry = ({ entry }) => {\n  return (\n    <tr className=\"table-entries\">\n      <td className=\"date\">{entry.date}</td>\n      <td className=\"open\">{entry.open}</td>\n      <td className=\"high\">{entry.high}</td>\n      <td className=\"low\">{entry.low}</td>\n      <td className=\"close\">{entry.close}</td>\n      <td className=\"volume\">{entry.volumn}</td>\n      <td className=\"market-cap\">{entry.marketCap}</td>\n    </tr>\n  );\n};\n\nexport default Entry;\n","import React from 'react';\nimport Entry from './Entry';\n\nvar PriceData = ({ data }) => {\n  return (\n    <div>\n      <table className=\"data-table\">\n        <thead>\n          <tr className=\"table-entries\">\n            <th className=\"date\">date</th>\n            <th className=\"open\">open</th>\n            <th className=\"high\">high</th>\n            <th className=\"low\">low</th>\n            <th className=\"close\">close</th>\n            <th className=\"volume\">volume</th>\n            <th className=\"market-cap\">market cap</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((entry) => (\n            <Entry entry={entry} key={entry.date} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PriceData;\n","import React, { Component } from 'react';\nimport Chart from 'chart.js';\nimport classes from './LineGraph.module.css';\n\n//--Chart Style Options--//\nChart.defaults.global.defaultFontFamily = \"'PT Sans', sans-serif\";\n\n//Setting the tension to 0 removes the smooth curves in graph. Optionally, can set the value to 0.1 or 0.2 to get a slight tension curve.\nChart.defaults.global.elements.line.tension = 0;\n\nclass LineGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  chartRef = React.createRef();\n\n  static getDerivedStateFromProps(props, state) {\n    const {\n      priceData: { close, date, high, low, marketCap, open, volume },\n    } = props;\n\n    return {\n      close,\n      date,\n      high,\n      low,\n      marketCap,\n      open,\n      volume,\n    };\n  }\n\n  componentDidMount() {\n    this.myChartRef = this.chartRef.current.getContext('2d');\n\n    this.updateChart();\n  }\n\n  updateChart = () => {\n    if (this.newChart) {\n      this.newChart.destroy();\n    }\n    this.newChart = new Chart(this.myChartRef, {\n      type: 'line',\n      data: {\n        labels: this.state.date,\n        datasets: [\n          {\n            label: 'open',\n            data: this.state.open,\n            fill: false,\n            borderColor: '#6ad431',\n          },\n          {\n            label: 'high',\n            data: this.state.high,\n            fill: false,\n            borderColor: '#2966cf',\n          },\n          {\n            label: 'low',\n            data: this.state.low,\n            fill: false,\n            borderColor: '#d12e1f',\n          },\n          {\n            label: 'close',\n            data: this.state.close,\n            fill: false,\n            borderColor: '#2a302b',\n          },\n        ],\n      },\n      options: {\n        //Customize chart options\n        layout: {\n          padding: {\n            top: 5,\n            left: 15,\n            right: 15,\n            bottom: 15,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              //ticks: { display: false },\n              gridLines: {\n                display: true,\n                drawBorder: true,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              //ticks: { display: false },\n              gridLines: {\n                display: true,\n                drawBorder: true,\n              },\n            },\n          ],\n        },\n      },\n    });\n\n    this.newChart.update();\n  };\n\n  render() {\n    if (this.newChart && this.chartRef) {\n      this.updateChart();\n    }\n    return (\n      <div className={classes.graphContainer}>\n        <canvas id=\"myChart\" ref={this.chartRef} />\n      </div>\n    );\n  }\n}\n\nexport default LineGraph;\n","import React, { Component } from 'react';\nimport classes from './Dashboard.module.css';\nimport LineGraph from './LineGraph';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.getAllPrices = this.getAllInfo.bind(this);\n  }\n\n  getAllInfo(data) {\n    let result = {\n      date: [],\n      open: [],\n      high: [],\n      low: [],\n      close: [],\n      volumn: [],\n      marketCap: [],\n    };\n\n    for (let key in data) {\n      result.date.push(data[key].date);\n      result.open.push(data[key].open);\n      result.high.push(data[key].high);\n      result.low.push(data[key].low);\n      result.close.push(data[key].close);\n      result.volumn.push(data[key].volumn);\n      result.marketCap.push(data[key].marketCap);\n    }\n    return result;\n  }\n\n  render() {\n    if (this.props.data && this.props.data.length) {\n      return (\n        <div className=\"classes-container\">\n          <header>\n            <h2 className=\"chart-title\">\n              Historical Time Series: {this.props.symbol} - {this.props.time}\n            </h2>\n          </header>\n          <LineGraph priceData={this.getAllInfo(this.props.data)} />\n        </div>\n      );\n    }\n    return <h2>Loading...</h2>;\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\n\nclass SymbolForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      symbol: '',\n      timeInterval: 'MONTHLY',\n      getCached: false,\n    };\n    this.handleSymbolChange = this.handleSymbolChange.bind(this);\n    this.handletimeIntervalChange = this.handletimeIntervalChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.changeGetCachedState = this.changeGetCachedState.bind(this);\n  }\n\n  handleSymbolChange(e) {\n    this.setState({\n      symbol: e.target.value,\n    });\n  }\n\n  handletimeIntervalChange(e) {\n    this.setState({\n      timeInterval: e.target.value,\n    });\n  }\n\n  changeGetCachedState() {\n    this.setState({\n      getCached: true,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.getHistoricalDataForSearched(this.state);\n    this.setState({\n      symbol: '',\n      timeInterval: 'MONTHLY',\n      getCached: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <label>\n            Symbol:\n            <input\n              className=\"symbol-input\"\n              type=\"type\"\n              name=\"symbol\"\n              value={this.state.symbol}\n              placeholder=\"BTC\"\n              onChange={this.handleSymbolChange}\n            />\n          </label>\n          <select\n            className=\"drop-down\"\n            onChange={this.handletimeIntervalChange}\n            defaultValue={this.state.timeInterval}\n          >\n            <option value=\"MONTHLY\" name=\"timeInterval\">\n              MONTHLY\n            </option>\n            <option value=\"WEEKLY\" name=\"timeInterval\">\n              WEEKLY\n            </option>\n            <option value=\"DAILY\" name=\"timeInterval\">\n              DAILY\n            </option>\n          </select>\n          Get Cached:\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.getCached}\n              onChange={this.changeGetCachedState}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n          <button className=\"search-button\" onClick={this.handleSubmit}>\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SymbolForm;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport PriceData from './components/PriceData';\nimport Dashboard from './components/Dashboard';\nimport SymbolForm from './components/SymbolForm';\nimport API_KEY from './config/cryptoCompare';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      priceData: [],\n      symbol: '',\n      time: '',\n      error: false,\n    };\n    this.getBTCData = this.getBTCData.bind(this);\n    this.getHistoricalDataForSearched = this.getHistoricalDataForSearched.bind(\n      this\n    );\n    this.transformData = this.transformData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getBTCData();\n  }\n\n  getBTCData() {\n    axios\n      .get(\n        `https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=BTC&market=USD&outputsize=compact&apikey=${API_KEY}`\n      )\n      .then((response) => {\n        this.setState({\n          priceData: [response.data['Time Series (Digital Currency Daily)']],\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  getHistoricalDataForSearched(symbolAndTime) {\n    axios\n      .get(\n        `http://localhost:3001/price/${symbolAndTime.symbol}/${symbolAndTime.timeInterval}`,\n        {\n          params: {\n            getCached: symbolAndTime.getCached,\n          },\n        }\n      )\n      .then((data) => {\n        let timeInt = symbolAndTime.timeInterval;\n        let rest = timeInt.slice(1).toLowerCase();\n        let string = timeInt[0] + rest;\n        let resultData = data.data[`Time Series (Digital Currency ${string})`];\n\n        this.setState({\n          priceData: [resultData],\n          symbol: symbolAndTime.symbol,\n          time: string,\n          error: false,\n        });\n      })\n      .catch((err) => {\n        console.log(err.response.status);\n        console.log(err);\n        this.setState({\n          error: true,\n        });\n      });\n  }\n\n  transformData(dataObj) {\n    let transformed = [];\n    for (let key in dataObj) {\n      let innerObj = {\n        date: key,\n        open: dataObj[key]['1a. open (USD)'],\n        high: dataObj[key]['2a. high (USD)'],\n        low: dataObj[key]['3a. low (USD)'],\n        close: dataObj[key]['4a. close (USD)'],\n        volumn: dataObj[key]['5. volume'],\n        marketCap: dataObj[key]['6. market cap (USD)'],\n      };\n      transformed.push(innerObj);\n    }\n    // only returning 30 entries\n    return transformed.slice(0, 30);\n  }\n\n  render() {\n    const topPortion = (\n      <div>\n        <h1 className=\"page-header\">Crypto Data Feeds</h1>\n        <SymbolForm\n          className=\"input-form\"\n          getHistoricalDataForSearched={this.getHistoricalDataForSearched}\n        />\n      </div>\n    );\n\n    if (this.state.error) {\n      return (\n        <div>\n          {topPortion}\n          <h3 className=\"error-message\">\n            There's no data found! Try live search!\n          </h3>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        {topPortion}\n        <br />\n\n        <div>\n          <Dashboard\n            data={this.transformData(this.state.priceData[0])}\n            symbol={this.state.symbol}\n            time={this.state.time}\n          />\n          <br />\n          <hr className=\"divider-line\" />\n          <PriceData data={this.transformData(this.state.priceData[0])} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}